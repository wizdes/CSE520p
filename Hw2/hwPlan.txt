1) Determine the graph necessary

What are the graphs necessary?
P1) 
Graphs
- Time vs num of elements (lines: multiply, shift, favorite) (do the average)
- Largest bucket vs num of elements (lines: multiply, shift, favorite)
- Sum of squred bucket size vs num of elements (lines: multiply, shift, favorite)

Graph -> Large number of collisions
- Time vs num of elements (lines: multiply, shift, favorite) (do the average)
- Largest bucket vs num of elements (lines: multiply, shift, favorite)
- Sum of squred bucket size vs num of elements (lines: multiply, shift, favorite)

Shift is a lot faster, no difference in hash squared bucket size.
Favorite has no difference.
Favorite is mod prime + shift, but it isn't any better than regular.

P2)
Graphs
- Time vs num of elements (lines: multiply, shift, favorite) (do the average)
- Largest bucket vs num of elements (lines: multiply, shift, favorite)
- Sum of squred bucket size vs num of elements (lines: multiply, shift, favorite)

Graph -> for multiple n's
- Time vs n (lines: multiply, shift, favorite) (do the average)
- Largest bucket vs n (lines: multiply, shift, favorite) (do the average)
- Sum of squared bucket size vs n (lines: multiply, shift, favorite) (do the average)

Increasing the 'n' definitely helps with time and size.

2) Draw the graphs
4) Write stuff
5) 
